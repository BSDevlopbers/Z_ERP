@model IEnumerable<Z_ERP.Models.inv_Stror_to_Store_order>

@{

}

<!DOCTYPE html>

<html>
<head>
    <title>Index</title>
</head>
<body>

    
    @*New Item Modal*@

    <div class="modal fade" id="modal-chooseInventory" style="display: none;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button class="close" aria-label="Close" type="button" data-dismiss="modal">
                        <span aria-hidden="true">×</span>
                    </button>
                    <h4 class="modal-title"> إختر مخزن لتحويل البضاعة </h4>
                </div>
                <div class="modal-body">

                    <table border="0" cellpadding="0" class="table table-bordered" cellspacing="0">
                        <thead>
                            <tr>
                                <th> إسم المخزن</th>
                            </tr>
                        </thead>


                        <tbody>
                            <tr>
                                <td>
                                    <select id="InventoryToList" class="form-control"></select>
                                </td>

                               
                            </tr>

                        </tbody>
                    </table>



                </div>
                <div class="modal-footer">
                    <button class="btn btn-default " type="button" data-dismiss="modal">خروج</button>
                    <input type="button" class="btn btn-primary" id="btnExchange" value="إضافة" />
                    @*<button class="btn btn-primary" type="button">Save changes</button>*@
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    @*New Item Modal*@
    @*New Item Modal*@

    <div class="modal fade" id="modal-default" style="display: none;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button class="close" aria-label="Close" type="button" data-dismiss="modal">
                        <span aria-hidden="true">×</span>
                    </button>
                    <h4 class="modal-title"> تحويل من محزن الى مخزن </h4>
                </div>
                <div class="modal-body">

                    <table border="0" cellpadding="0" class="table table-bordered" cellspacing="0">
                        <thead>
                            <tr>
                                <th> البضاعة</th>
                                <th>الكمية</th>
                            </tr>
                        </thead>


                        <tbody>
                            <tr>
                                <td>
                                    <select id="ItemsList" class="form-control"></select>
                                        @*@Html.DropDownList("ItemID", ViewBag.ItemsDropDownList as SelectList, htmlAttributes: new { id = "ItemsList", @class = "form-control" })*@
                                   
                                    
                                </td>



                                <td style="width:170px">

                                    <button type="button" id="sub" class="sub">-</button>

                                    <input type="number" class="from-control" id="txtItemQuantity" value="1" min="1" max="10000000" />

                                    <button type="button" id="add" class="add">+</button>
                                </td>
                                @*<td>
                                    <select id="ToInvertoriesList" class="form-control">

                                    </select>*@
                                    @*@Html.DropDownList("InventoryID", ViewBag.ToInvetoryDropDownList as SelectList, htmlAttributes: new { id = "ToInvertoriesList", @class = "form-control" })*@
                                @*</td>*@
                            </tr>

                        </tbody>
                    </table>



                </div>
                <div class="modal-footer">
                    <button class="btn btn-default " type="button" data-dismiss="modal">خروج</button>
                    <input type="button" class="btn btn-primary"  id="btnAdd" value="إضافة" />
                    @*<button class="btn btn-primary" type="button">Save changes</button>*@
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    @*New Item Modal*@


    
        
            

                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-group col-lg-2">
                            <label> المخازن</label>
                            @Html.DropDownList("InventoryID", ViewBag.InvertoriesDropDownList as SelectList, "-- إختر مخزن--", htmlAttributes: new { id = "InvertoriesList", @class = "form-control" })
                        </div>
                    </div>


                    <div class="col-md-10">
                        <div class="box box-success box-solid">
                            <div class="box-header with-border">
                                <h3 class="box-title">سلة المشتريات</h3>
                                <div class="box-tools pull-right">
                                    <button class="btn btn-box-tool" type="button" data-widget="collapse">
                                        <i class="fa fa-minus"></i>
                                    </button>
                                </div>

                                <!-- /.box-tools -->
                            </div>
                            <!-- /.box-header -->
                            <div class="box-body">
                                <table id="tblCartItems" class="table table-bordered table-striped" cellpadding="0" cellspacing="0">

                                    <tr>


                                        <th style="width:150px">الاسم</th>
                                        <th style="width:150px">المخزن</th>
                                        <th style="width:150px">الكمية</th>
                                        <th style="width:150px"></th>
                                    </tr>




                                    @foreach (var cartItems in Model)
                                    {

                                        <tr>


                                            <td class="orderFromnventoryID" style="display:none ">
                                                <span>@cartItems.Stror_to_Store_orderID</span>
                                            </td>
                                            
                                            <td class="orderItemID" style="display:none ">
                                                <span>@cartItems.orderItemID</span>
                                                <input type="text" value="@cartItems.orderItemID" disabled="disabled" style="display:none" />
                                            </td>
                                            <td class="OrderInventoryFromID" style="display:none " >
                                                <span style="display:none">@cartItems.orderFromnventoryID</span>
                                                <input type="text" value="@cartItems.orderFromnventoryID" disabled="disabled" style="display:none" />
                                            </td>
                                            <td class="fromOrderInventoryName" >
                                                <span id="InventoryisIDSpan">@cartItems.fromOrderInventoryName</span>
                                                <input type="text" value="@cartItems.fromOrderInventoryName" disabled="disabled"  style="display:none" />
                                            </td>
                                            <td class="ItemName">
                                                <span id="ItemNameSpan">@cartItems.orderItemName</span>
                                                <input type="text" value="@cartItems.orderItemName" disabled="disabled" style="display:none" />
                                            </td>

                                            <td class="orderItemQuantity">
                                                <span>@cartItems.orderItemQuantity</span>
                                                <button type="button" id="sub" class="sub" style="display:none">-</button>

                                                <input type="number" value="@cartItems.orderItemQuantity" style="display:none" id="orderQuantity"  min="1" max="10000000" />
                                                <button type="button" style="display:none" id="add" class="add">+</button>
                                                
                                            </td>
                                            <td>
                                                <a class="Edit btn btn-warning" style="padding: 2px 9px;" href="javascript:;">  تعديل  </a>
                                                <a class="Update btn btn-success" style="padding: 2px 9px; display:none" href="javascript:;">  تعديل  </a>
                                                <a class="Cancel btn btn-default" style="padding: 2px 9px; display:none" href="javascript:;">  إلغاء  </a>
                                                <a class="Delete btn btn-danger" style="padding: 2px 9px;" href="javascript:;">  مسح  </a>
                                            </td>
                                        </tr>
                                    }

                                </table>

                                @{
                                    if (Model.Count() > 0)
                                    {

                                        <button class="btn btn-success perpareOrder" id="perpareOrder" type="button" style="margin-top:30px">إكمال عملية التحويل</button>
                                    }
                                }



                            </div>
                            <!-- /.box-body -->
                        </div>
                        <!-- /.box -->
                    </div>





                </div>

              

    @section Scripts
{
        <script>

        $(document).ready(function () {

            
            function GetInvenrotyItems(InventoryID) {
                
                $.ajax({
                    type: 'GET',
                    "url": '/GoodExchanges/GetInvenrotyItems?InventoryID=' + InventoryID,
                    dataType: 'json',
                    success: function (data) {
                        console.log(data);
                        $('#ItemsList').find('option').remove();
                        data.forEach(function (arrayItem) {
                            $("#ItemsList").append('<option value="'
                           + arrayItem[0].ItemID + '">'
                           + arrayItem[0].ItemNameAr + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            }
            InventoryID = $('#InvertoriesList').val();
           // GetInvenrotyItems(InventoryID);
            //Dropdownlist Selectedchange event
            $("#InvertoriesList").change(function () {

                var InventoryID = $('#InvertoriesList').val();
                $('#modal-default').modal('show');
                GetInvenrotyItems(InventoryID);
                //GetInvenrotyInvintory(InventoryID);
            })
            
            




        });
       
        function GetInvenrotyItems() {
          
            $.ajax({
                type: 'GET',
                "url": '/GoodExchanges/GetPosipoleInvenroty?InventoryID=' + InventoriesArray,
                dataType: 'json',
                success: function (data) {
                    console.log(data);
                    $('#InventoryToList').find('option').remove();
                    data.forEach(function (arrayItem) {
                        $("#InventoryToList").append('<option value="'
                       + arrayItem.InvertoryID + '">'
                       + arrayItem.InvertoryNameAr + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        }
        $('#btnExchange').click(function () {

            //alert(ItemIDArray + "" + NamesArray + "" + InventoriesArray + "" + QuantitiesArray + "" + $("#InventoryToList option:selected").val());
            
            $.ajax({
                type: "POST",
                url: "/GoodExchanges/InsertGoodExchangesRecourds",
                data: '{StoreIDArray: "' + StoreIDArray + '",ItemIDArray: "' + ItemIDArray + '", NamesArray: "' + NamesArray + '", InventoriesArray: "' + InventoriesArray + '", QuantitiesArray: "' + QuantitiesArray + '", InventoryToID: "' + $("#InventoryToList option:selected").val() + '"}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {

                    $('#modal-chooseInventory').modal('toggle');

                    swal({
                        type: 'success',
                        title: 'Sucssess',
                        text: 'Data has been saved !'
                    });



                    setInterval(function () {
                        location.reload();
                    }, 2500);

                    //var row = $("#tblCartItems tr:last-child");
                    //if ($("#tblCartItems tr:last-child span").eq(0).html() != "&nbsp;") {
                    //    row = row.clone();
                    //}


                }
            });




        });
        </script>


        <script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>
        <script type="text/javascript">

            //////////////////////////
            var QuantitiesArray = new Array();
            var ItemIDArray = new Array();
            var StoreIDArray = new Array();
            var NamesArray = new Array();
            var InventoriesArray = new Array();
            ///////////////////////////

        $('#perpareOrder').click(function () {


           QuantitiesArray = new Array();
           ItemIDArray = new Array();
           NamesArray = new Array();
           InventoriesArray = new Array();
           StoreIDArray = new Array();

           


            $('#tblCartItems > tbody  > tr').each(function (i, row) {

                var IQ = 1;
                $(".ItemName", row).each(function () {
                    var ItemName = $(this).find("input:not(:eq(1))").val();
                        NamesArray.push(ItemName);
                });
                $(".orderItemQuantity", row).each(function () {
                    var ItemQuantity = $(this).find("input:not(:eq(1))").val();
                    QuantitiesArray.push(ItemQuantity);

                });
                $(".OrderInventoryFromID", row).each(function () {

                    var Inventoryis = $(this).find("input:not(:eq(1))").val();


                  
                    InventoriesArray.push(Inventoryis);
                  
                });
                $(".orderFromnventoryID", row).each(function () {

                    var orderFromnventory = $(this).find("span:not(:eq(1))").text();



                    StoreIDArray.push(orderFromnventory);

                }); 
                
                $(".orderItemID", row).each(function () {
                    var ItemID = $(this).find("input:not(:eq(1))").val();
                    ItemIDArray.push(ItemID);
                });


            });

            var cartItemsDataArray = new Array();
            cartItemsDataArray.push(StoreIDArray,ItemIDArray, NamesArray, InventoriesArray, QuantitiesArray);
            console.log(cartItemsDataArray);

            
            GetInvenrotyItems();
            $('#modal-chooseInventory').modal('show');
           




        });



        // Plus And Minus
            $('.add').click(function () {
                if ($(this).prev().val() < 1000) {
                    $(this).prev().val(+$(this).prev().val() + 1);
                }
            });
            $('.sub').click(function () {
                if ($(this).next().val() > 1) {
                    if ($(this).next().val() > 1) $(this).next().val(+$(this).next().val() - 1);
                }
            });
           

            $('#addTd').click(function () {


                if ($(this).prev().val() < 1000) {
                    $(this).prev().val(+$(this).prev().val() + 1);
                }
            });
            $('#subTd').click(function () {
                if ($(this).next().val() > 1) {
                    if ($(this).next().val() > 1) $(this).next().val(+$(this).next().val() - 1);
                }
            });

        // Plus And Minus

            var checkQuatityResult = false;

        function AppendRow(row, purchaseCartID, ItemName, ItemQuantity) {
            //Bind CustomerId.
            $(".purchaseCartID", row).find("span").html(purchaseCartID);

            //Bind Name.
            $(".ItemName", row).find("span").html(name);
            $(".ItemName", row).find("input").val(name);

            //Bind Country.
            $(".temQuantity", row).find("span").html(ItemName);
            $(".temQuantity", row).find("input").val(ItemQuantity);

            row.find(".Edit").show();
            row.find(".Delete").show();
            $("#tblCartItems").append(row);
        };
        function checkQuantity(fromInvertorieID, ItemNameAr, Quantity, key) {
            //alert(fromInvertorieID+""+ ItemNameAr+""+ Quantity+""+ key);
            $.ajax({
                type: "POST",
                url: "/GoodExchanges/checkQuantity/?fromID=" + fromInvertorieID + "&ItemNameAr=" + ItemNameAr + "&quantity=" + Quantity,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {
                    if (r) {
                        if (key == 1) {
                            insertTOExchange();
                        }
                        else {
                            updateCartItems();
                        }
                        
                    }
                    else {
                        
                        swal({
                            type: 'error',
                            title: 'خطاء',
                            text: 'الكمية غير كافية'
                        });
                    }
                }
            });

        }
        //Add event handler.
        $("body").on("click", "#btnAdd", function () {
           txtItemName = $("#ItemsList option:selected").text();
            txtItemQuantity = $("#txtItemQuantity").val();
           //textToInvertorieName = $("#ToInvertoriesList option:selected").text();
           //textToInvertorieID = $("#ToInvertoriesList option:selected").val();
           textfromInvertorieName = $("#InvertoriesList option:selected").text();
            textfromInvertorieID = $("#InvertoriesList option:selected").val();
            txtItemID = $("#ItemsList option:selected").val();
           ItemNameAr = $("#ItemsList option:selected").text();

            // alert(txtItemName + " : " + txtItemID + "," + textToInvertorieName + " : " + textToInvertorieID + "," + textfromInvertorieName + " : " + textfromInvertorieID + "," + txtItemQuantity);
            

           checkQuantity(textfromInvertorieID, ItemNameAr, txtItemQuantity,1);
            
           
        });

        function insertTOExchange() {
           // alert('{orderFromnventoryID: "' + textfromInvertorieID + '",fromOrderInventoryName: "' + textfromInvertorieName + '",orderItemID: "' + txtItemID + '", orderItemQuantity: "' + txtItemQuantity + '", orderItemName: "' + txtItemName + '",orderItemQuantity: "' + txtItemQuantity + '" }');
            
            $.ajax({
                type: "POST",
                url: "/GoodExchanges/InsertGoodExchanges",
                data: '{orderFromnventoryID: "' + textfromInvertorieID + '",fromOrderInventoryName: "' + textfromInvertorieName + '",orderItemID: "' + txtItemID + '", orderItemQuantity: "' + txtItemQuantity + '", orderItemName: "' + txtItemName + '",orderItemQuantity: "' + txtItemQuantity + '" }',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {


                    swal({
                        type: 'success',
                        title: 'نجاح',
                        text: 'تم العملية بنجاح'
                    });

                    var row = $("#tblCartItems tr:last-child");
                    if ($("#tblCartItems tr:last-child span").eq(0).html() != "&nbsp;") {
                        row = row.clone();
                    }

                    //load(window.location);
                    setInterval(function () {
                        location.reload();
                    }, 2500);

                }
            });

            //$('#tblCartItems').DataTable().ajax.reload();

            //$("#tblCartItems tr:eq(1)").remove();
            //location.reload();
            $('#modal-default').modal('toggle');
        }
        //Edit event handler.
        $("body").on("click", "#tblCartItems .Edit", function () {
            var row = $(this).closest("tr");
            $("td", row).each(function () {
                if ($(this).find("input").length > 0) {
                    $(this).find("input").show();
                    $(this).find("button").show();
                    $(this).find("span").hide();
                }
            });
            row.find(".Update").show();
            row.find(".Cancel").show();
            row.find(".Delete").hide();
            $(this).hide();
        });

            //Update event handler.
        var ItemNameToUpdate;
        var ItemQuantityToUpdate;
        var txtItemSellPriceToUpdate;
        var txtItempurchasePriceToUpdate;
        var InventoryFromIDToUpdate;
        $("body").on("click", "#tblCartItems .Update", function () {



            var row = $(this).closest("tr");
            $("td", row).each(function () {
                if ($(this).find("input").length > 0) {
                    var span = $(this).find("span");
                    var input = $(this).find("input");
                  //  span.html(input.val());
                    span.show();
                    $(this).find("button").show();
                    $(this).find("button").show();
                    input.hide();
                }
            });
            row.find(".Edit").show();
            row.find(".Delete").show();
            row.find(".Cancel").hide();
            $(this).hide();

             ItemNameToUpdate = row.find(".ItemName").find("span").html();
             ItemQuantityToUpdate = row.find(".orderItemQuantity").find("input").val();
             txtItemSellPriceToUpdate = row.find(".ItemSellPrice").find("span").html();
             txtItempurchasePriceToUpdate = row.find(".ItempurchasePrice").find("span").html();
             InventoryFromIDToUpdate = row.find(".OrderInventoryFromID").find("span").html();
             //alert(ItemQuantityToUpdate);
             checkQuantity(InventoryFromIDToUpdate, ItemNameToUpdate, ItemQuantityToUpdate, 2)

          
        });
        function updateCartItems() {
            $.ajax({
                type: "POST",
                url: "/GoodExchanges/UpdateGoodExchangesCart",
                data: '{orderFromnventoryID: "' + InventoryFromIDToUpdate + '",orderItemName: "' + ItemNameToUpdate + '",orderItemQuantity: "' + ItemQuantityToUpdate + '" }',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {


                    swal({
                        type: 'success',
                        title: 'نجاح',
                        text: 'تم التعديل بنجاح'
                    });

                    var row = $("#tblCartItems tr:last-child");
                    if ($("#tblCartItems tr:last-child span").eq(0).html() != "&nbsp;") {
                        row = row.clone();
                    }
                    setInterval(function () {
                        location.reload();
                    }, 2500);
                }
            });
        }

        //Cancel event handler.
        $("body").on("click", "#tblCartItems .Cancel", function () {
            var row = $(this).closest("tr");
            $("td", row).each(function () {
                if ($(this).find("input").length > 0) {
                    var span = $(this).find("span");
                    var input = $(this).find("input");
                    var button = $(this).find("button");
                    input.val(span.html());
                    span.show();
                    input.hide();
                    button.hide();

                }
            });
            row.find(".Edit").show();
            row.find(".Delete").show();
            row.find(".Update").hide();

            $(this).hide();
        });

        //Delete event handler.
        $("body").on("click", "#tblCartItems .Delete", function () {
            if (confirm("Do you want to delete this row?")) {
                var row = $(this).closest("tr");
                var storID = row.find("span").html();//ZZz
                //alert(storID);
                $.ajax({
                    type: "POST",
                    url: "/GoodExchanges/DeleteCartItem",
                    data: '{id: ' + storID + '}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        if (data.status) {
                            swal({
                                type: 'success',
                                title: 'نجاح',
                                text: 'تم المسح'
                            });
                            $("#tblCartItems").load(window.location + " #tblCartItems");

                            setInterval(function () {
                                location.reload();
                            }, 1200);
                        }

                        //if ($("#tblCartItems tr").length > 2) {
                        //    row.remove();
                        //} else {
                        //    row.find(".Edit").hide();
                        //    row.find(".Delete").hide();
                        //    row.find("span").html('&nbsp;');
                        //}
                    }
                });
            }
        });


        </script>

    }

</body>
</html>
